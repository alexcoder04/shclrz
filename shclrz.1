.TH "shclrz" "1" 

.SH "NAME"
.PP
shclrz - coloring output in the shell

.SH "SYNOPSIS"
.PP
shclrz [OPTIONS]

.SH "DESCRIPTION"
.PP
shclrz (as in SHell CoLoRiZer) is a simple shell script with the goal to simplify creating colorful output in the shell.

.SH "OPTIONS"
.SS "-h, --help"
.PP
Print help.
.SS "-v, --version"
.PP
Print program version.
.SS "-i, --info"
.PP
Print list of color codes.
.SS "-s [SOURCE_FILE], --source-file [SOURCE_FILE]"
.PP
Read from SOURCE_FILE instead of stdin
.SS "-f [COLOR], --foreground [COLOR]"
.PP
Specify foreground color
.SS "-b [COLOR], --background [COLOR]"
.PP
Specify background color
.SS "-F [OPTION], --formatting [OPTION]"
.PP
Use a formatting option like bold, italic or underline

.SH "EXAMPLES"
.SS "shclrz -F underline -f red <file.txt"
.PP
Outputs the content of file.txt underlined and with red foreground.
.SS "ls | shclrz -b blue"
.PP
Colors the output of ls with blue background.

.SH "SOURCING"
.PP
You can also use shclrz by sourcing it. Then it defines a "colorize" function, into which you can pipe text. The formatting is then controlled by modifing the following variables:
"SHCLRZ_BACKGROUND", "SHCLRZ_FOREGROUND", "SHCLRZ_FORMATTING". These must contain a number corresponding to the color, these can be found out using the "--info" flag.

.PP
Also, when you source shclrz, it defines variables containing the colors, e. g.
.SS "source shclrz && echo -e $FG_RED Hello $RESET"

.PP
This prints "Hello" with red foreground. The "-e" flag is necessary for Bash, not for a POSIX shell.

.SH "AUTHOR"
.PP
alexcoder04 (\fIhttps://github.com/alexcoder04/shclrz\fP)

